% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_functions.R
\name{IQR.filter}
\alias{IQR.filter}
\title{IQR (interquartile range) filter to extract genes from expression matrix}
\usage{
IQR.filter(
  exp_mat,
  use_genes = rownames(exp_mat),
  thre = 0.5,
  loose_gene = NULL,
  loose_thre = 0.1
)
}
\arguments{
\item{exp_mat}{matrix, the gene expression matrix. Each row represents a gene/transcript/probe, each column represents a sample.}

\item{use_genes}{a vector of characters, the gene list needed to be filtered. Default is the row names of \code{exp_mat}.}

\item{thre}{numeric, the threshold for IQR of the genes in \code{use_genes}. Default is 0.5.}

\item{loose_gene}{a vector of characters, the gene list that only need to pass the \code{loose_thre}.
This parameter is designed for the input of possible drivers used in SJAracne. Default is NULL.}

\item{loose_thre}{numeric, the threshold for IQR of the genes in \code{loose_gene}. Default is 0.1.}
}
\value{
Return a vector with logical values indicate which genes should be kept.
}
\description{
\code{IQR.filter} is a function to extract genes from the expression matrix by setting threshold to their IQR value.
IQR (interquartile range) is a measure of statistical dispersion. It is calculated for each gene across all the samples.
By setting threshold value, genes with certain statistical dispersion across samples will be filtered out.
This step is mainly used to perform sample cluster and to prepare the input for SJAracne.
}
\examples{
mat1 <- matrix(rnorm(15000),nrow=1500,ncol=10)
colnames(mat1) <- paste0('Sample',1:ncol(mat1))
rownames(mat1) <- paste0('Gene',1:nrow(mat1))
choose1 <- IQR.filter(mat1,thre=0.5,
                     loose_gene=paste0('Gene',1:100))
}
