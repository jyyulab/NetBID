% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_functions.R
\name{get_IDtransfer_betweenSpecies}
\alias{get_IDtransfer_betweenSpecies}
\title{Create Data Frame for ID Conversion Between Species}
\usage{
get_IDtransfer_betweenSpecies(
  from_spe = "human",
  to_spe = "mouse",
  from_type = NULL,
  to_type = NULL,
  use_genes = NULL,
  useCache = TRUE
)
}
\arguments{
\item{from_spe}{character, name of the original species (e.g. "human", "mouse", "rat") that \code{use_genes} belongs to. Default is "human".}

\item{to_spe}{character, name of the target species (e.g. "human", "mouse", "rat"). Default is "mouse".}

\item{from_type}{character, the attribute name match the current ID type (the type of \code{use_genes}).
Such as "ensembl_gene_id", "ensembl_gene_id_version", "ensembl_transcript_id", "ensembl_transcript_id_version" or "refseq_mrna".
The "attribute" is inherited from the \code{biomaRt} package. For details, user can call \code{biomaRt::listAttributes()} function to display all available attributes in the selected dataset.}

\item{to_type}{character, the attribute name match the target ID type.}

\item{use_genes}{a vector of characters, the genes for ID conversion. Must be the genes with ID type of \code{from_type}, and from species \code{from_spe}.
If NULL, all the possible genes will be shown in the conversion table. Default is NULL.}

\item{useCache}{Boolean, parameter pass to \code{getBM()} indicating whether the results cache should be used. Setting to FALSE will disable reading and writing of the cache.}
}
\value{
Return a data frame for ID conversion, from one species to another.
}
\description{
\code{get_IDtransfer_betweenSpecies} creates a data frame to convert ID between species.
}
\examples{
use_genes <- c("ENST00000210187","ENST00000216083","ENST00000216127",
             "ENST00000216416","ENST00000217233","ENST00000221418")
transfer_tab <- get_IDtransfer_betweenSpecies(from_spe='human',
                               to_spe='mouse',
                               from_type = 'ensembl_transcript_id',
                               to_type='external_gene_name',
                               use_genes=use_genes)
                               ## get transfer table !!!
transfer_tab <- get_IDtransfer_betweenSpecies(from_spe='human',
                               to_spe='mouse',
                               from_type = 'ensembl_transcript_id',
                               to_type='ensembl_transcript_id_version',
                               use_genes=use_genes)
                               ## get transfer table !!!
\dontrun{
transfer_tab <- get_IDtransfer_betweenSpecies(from_spe='human',
                               to_spe='mouse',
                               from_type='refseq_mrna',
                               to_type='refseq_mrna')
}
}
