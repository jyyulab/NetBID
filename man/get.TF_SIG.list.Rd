% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_functions.R
\name{get.TF_SIG.list}
\alias{get.TF_SIG.list}
\title{Get Transcription Factor (TF) and Signaling Factor (SIG) List}
\usage{
get.TF_SIG.list(
  use_genes = NULL,
  use_gene_type = "external_gene_name",
  ignore_version = FALSE,
  dataset = NULL
)
}
\arguments{
\item{use_genes}{a vector of characters, genes will be used in the network construction.
If NULL, no filter will be performed to the TF/SIG list. Default is NULL.}

\item{use_gene_type}{character, the attribute name inherited from the biomaRt package.
Some options are, "ensembl_gene_id", "ensembl_gene_id_version", "ensembl_transcript_id", "ensembl_transcript_id_version" and "refseq_mrna".
All options can be accessed by calling \code{biomaRt::useMart} (e.g. mart <- biomaRt::useMart('ensembl',db_info[1]); biomaRt::listAttributes(mart)$name).

The type must match the gene type from the input \code{use_genes}. Default is "external_gene_name".}

\item{ignore_version}{logical, if TRUE, the version "ensembl_gene_id_version" or "ensembl_transcript_id_version" will be ignored.
Default is FALSE.}

\item{dataset}{character, the dataset used for ID conversion (e.g. "hsapiens_gene_ensembl").
If NULL, use \code{db_info[1]} from \code{db.preload}. Default is NULL.}
}
\value{
Return a list containing two elements. \code{tf} is the TF list, \code{sig} is the SIG list.
}
\description{
\code{get.TF_SIG.list} is a function converts gene ID into the corresponding TF/SIG list,
with selected gene/transcript type.
}
\examples{
db.preload(use_level='transcript',use_spe='human',update=FALSE)
use_genes <- c("ENST00000210187","ENST00000216083","ENST00000216127",
             "ENST00000216416","ENST00000217233","ENST00000221418",
             "ENST00000504956","ENST00000507468")
res_list  <- get.TF_SIG.list(use_gene_type = 'ensembl_transcript_id',
                               use_genes=use_genes,
                               dataset='hsapiens_gene_ensembl')
print(res_list)

\dontrun{
}

}
