% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_functions.R
\name{draw.combineDE}
\alias{draw.combineDE}
\title{Plot for combined DE (differentiated expressed)/DA (differentiated activity) Vs. original DE/DA}
\usage{
draw.combineDE(
  DE_list = NULL,
  main_id = NULL,
  top_number = 30,
  display_col = "P.Value",
  z_col = "Z-statistics",
  digit_num = 2,
  row_cex = 1,
  column_cex = 1,
  text_cex = 1,
  pdf_file = NULL
)
}
\arguments{
\item{DE_list}{list, a list of DE/DA results, with one more component named "combine" that include the combined results.
Strongly suggest to use the output from \code{combineDE}.}

\item{main_id}{character, the main id for display in the figure, must be one of the name in DE_list.
If NULL, will use the first name. Default is NULL.}

\item{top_number}{number for the top significant genes/drivers in the combine results to be displayed on the plot.
Default is 30.}

\item{display_col}{character, column names used to display. Default is 'P.Value'.}

\item{z_col}{character, column names for Z statistics used for background color bar. Default is 'Z-statistics'.}

\item{digit_num}{integer, number of digits to display on the plot. Default is 2.}

\item{row_cex}{numeric, \code{cex} for the row labels displayed on the plot. Default is 1}

\item{column_cex}{numeric, \code{cex} for the col labels displayed on the plot. Default is 1}

\item{text_cex}{numeric, \code{cex} for the text displayed on the plot. Default is 1}

\item{pdf_file}{character, file path for the pdf file to save the figure into pdf format.If NULL, will not generate pdf file. Default is NULL.}
}
\value{
logical value indicating whether the plot has been successfully generated
}
\description{
\code{draw.combineDE} draw the image for the combined DE/DA Vs. original DE/DA.
}
\details{
This plot function need to input the output from \code{combineDE}.
}
\examples{
analysis.par <- list()
analysis.par$out.dir.DATA <- system.file('demo1','driver/DATA/',package = "NetBID2")
NetBID.loadRData(analysis.par=analysis.par,step='ms-tab')
phe_info <- Biobase::pData(analysis.par$cal.eset)
each_subtype <- 'G4'
G0  <- rownames(phe_info)[which(phe_info$`subgroup`!=each_subtype)] # get sample list for G0
G1  <- rownames(phe_info)[which(phe_info$`subgroup`==each_subtype)] # get sample list for G1
DE_gene_limma_G4 <- getDE.limma.2G(eset=analysis.par$cal.eset,
                                   G1=G1,G0=G0,
                                   G1_name=each_subtype,
                                   G0_name='other')
each_subtype <- 'SHH'
G0  <- rownames(phe_info)[which(phe_info$`subgroup`!=each_subtype)] # get sample list for G0
G1  <- rownames(phe_info)[which(phe_info$`subgroup`==each_subtype)] # get sample list for G1
DE_gene_limma_SHH <- getDE.limma.2G(eset=analysis.par$cal.eset,
                                    G1=G1,G0=G0,
                                    G1_name=each_subtype,
                                    G0_name='other')
DE_list <- list(G4=DE_gene_limma_G4,SHH=DE_gene_limma_SHH)
res2 <- combineDE(DE_list,transfer_tab=NULL)
draw.combineDE(res2)
}
